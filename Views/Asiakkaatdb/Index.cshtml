@model IEnumerable<MVC_TKsovellus_1001.Models.Asiakkaat>

@{
    ViewBag.Title = "Index";
}

<h3>Asiakkaat</h3>

<p></p>
    <a class="btn btn-primary btm-sm" href="/Asiakkaatdb/Create"><img src="~/Icons/person-fill-add.svg" style="margin-right:10px" />Lisää asiakas</a>
<p></p>
<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Nimi)</th>

            <th>@Html.DisplayNameFor(model => model.Osoite)</th>
            <!--postinumero tähän-->
            <th>@Html.DisplayNameFor(model => model.Postinumero)</th>

            <th>@Html.DisplayNameFor(model => model.Postitoimipaikat.Postitoimipaikka)</th>
 
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Nimi)</td>

                <td>@Html.DisplayFor(modelItem => item.Osoite)</td>
                <!--postinumero tähän-->
                <td>@Html.DisplayFor(modelItem => item.Postinumero)</td>
                
                <td>@Html.DisplayFor(modelItem => item.Postitoimipaikat.Postitoimipaikka)</td>
                <td>
                    <a class="btn btn-primary btm-sm" href="/Asiakkaatdb/Edit?id=@item.AsiakasID">Muokkaa</a>
                    <a class="btn btn-info btm-sm" href="/Asiakkaatdb/Details?id=@item.AsiakasID">Lisätiedot</a>
                    <a class="btn btn-danger btm-sm" href="/Asiakkaatdb/Delete?id=@item.AsiakasID">Poista</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
            const getCellValue = (tr, idx) => tr.children[idx].innerText || tr.children[idx].textContent;
            const comparer = (idx, asc) => (a, b) => ((v1, v2) =>
            v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)
            )(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));
            document.querySelectorAll('th').forEach(th => th.addEventListener('click', (() => {
            const table = th.closest('table');
            const tbody = table.querySelector('tbody');
            Array.from(tbody.querySelectorAll('tr'))
            .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))
            .forEach(tr => tbody.appendChild(tr));
            })));
    </script>
    }